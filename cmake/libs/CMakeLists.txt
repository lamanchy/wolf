project(wolf_libs)
cmake_minimum_required(VERSION 3.13)
set(CMAKE_CXX_STANDARD 11)

include(ExternalProject)

set(DEFAULT_CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
set(DEFAULT_CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
set(DEFAULT_CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
set(DEFAULT_CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
set(DEFAULT_CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
set(DEFAULT_CMAKE_C_FLAGS ${CMAKE_C_FLAGS})
if (WIN32)
    list(TRANSFORM DEFAULT_CMAKE_CXX_FLAGS_RELEASE REPLACE /MD /MT)
    list(TRANSFORM DEFAULT_CMAKE_C_FLAGS_RELEASE REPLACE /MD /MT)
    list(TRANSFORM DEFAULT_CMAKE_CXX_FLAGS_DEBUG REPLACE /MDd /MTd)
    list(TRANSFORM DEFAULT_CMAKE_C_FLAGS_DEBUG REPLACE /MDd /MTd)
endif ()

# stxxl needs to silence one deprecation error (or it won't build)
set(STXXL_CXX_FLAGS ${DEFAULT_CMAKE_CXX_FLAGS})
if (WIN32)
    set(STXXL_CXX_FLAGS "${STXXL_CXX_FLAGS} /D_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS")
endif ()

# path of cppkafka boost
get_filename_component(CPPKAFKA_BOOST_ROOT ${WOLF_LIBS_PATH} DIRECTORY)

ExternalProject_Add(_asio
        GIT_REPOSITORY https://github.com/chriskohlhoff/asio.git
        GIT_TAG asio-1-12-2
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ""
        INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory asio/include ${WOLF_LIBS_PATH}/include
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_boost_headers
        URL https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.bz2
        URL_HASH SHA256=d73a8da01e8bf8c7eda40b4c84915071a8c8a0df4a6734537ddde4a8580524ee
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ""
        INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory boost ${WOLF_LIBS_PATH}/include/boost
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_date
        GIT_REPOSITORY https://github.com/HowardHinnant/date.git
        # GIT_TAG needs master >{
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ""
        INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory include ${WOLF_LIBS_PATH}/include
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_re2
        GIT_REPOSITORY https://github.com/google/re2.git
        GIT_TAG 2019-03-01
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DRE2_BUILD_TESTING=OFF
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_librdkafka
        GIT_REPOSITORY https://github.com/edenhill/librdkafka.git
        GIT_TAG v0.11.6
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DRDKAFKA_BUILD_STATIC=ON
        -DRDKAFKA_BUILD_EXAMPLES=OFF
        -DRDKAFKA_BUILD_TESTS=OFF
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_cppkafka
        DEPENDS _boost_headers _librdkafka
        GIT_REPOSITORY https://github.com/mfontanini/cppkafka.git
        GIT_TAG v0.3.1
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DRDKAFKA_ROOT_DIR=${WOLF_LIBS_PATH}
        -DBOOST_ROOT=${CPPKAFKA_BOOST_ROOT}
        -DCPPKAFKA_RDKAFKA_STATIC_LIB=ON
        -DCPPKAFKA_BUILD_SHARED=OFF
        -DCPPKAFKA_DISABLE_TESTS=ON
        -DCPPKAFKA_DISABLE_EXAMPLES=ON
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_taojson
        GIT_REPOSITORY https://github.com/taocpp/json.git
        GIT_TAG 1.0.0-beta.11
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DTAOCPP_JSON_BUILD_TESTS=OFF
        -DTAOCPP_JSON_BUILD_EXAMPLES=OFF
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_stxxl
        GIT_REPOSITORY https://github.com/stxxl/stxxl.git
        GIT_TAG 1.4.1
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${STXXL_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DBUILD_TESTS=OFF
        -DBUILD_EXAMPLES=OFF
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_cxxopts
        GIT_REPOSITORY https://github.com/jarro2783/cxxopts.git
        # GIT_TAG needs master >{
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_zlib
        GIT_REPOSITORY https://github.com/madler/zlib.git
        GIT_TAG v1.2.11
        CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${WOLF_LIBS_PATH}
        -DCMAKE_CXX_FLAGS_RELEASE=${DEFAULT_CMAKE_CXX_FLAGS_RELEASE}
        -DCMAKE_C_FLAGS_RELEASE=${DEFAULT_CMAKE_C_FLAGS_RELEASE}
        -DCMAKE_CXX_FLAGS_DEBUG=${DEFAULT_CMAKE_CXX_FLAGS_DEBUG}
        -DCMAKE_C_FLAGS_DEBUG=${DEFAULT_CMAKE_C_FLAGS_DEBUG}
        -DCMAKE_CXX_FLAGS=${DEFAULT_CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${DEFAULT_CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        BUILD_IN_SOURCE OFF
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )

ExternalProject_Add(_gzip-hpp
        DEPENDS _zlib
        GIT_REPOSITORY https://github.com/mapbox/gzip-hpp.git
        GIT_TAG v0.1.0
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ""
        INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory include ${WOLF_LIBS_PATH}/include
        LOG_DOWNLOAD ON
        LOG_UPDATE ON
        LOG_CONFIGURE ON
        LOG_TEST ON
        LOG_BUILD ON
        LOG_INSTALL ON
        UPDATE_DISCONNECTED ON
        )